      //filtering
  const queryObj = {...req.query};
  const excludedFields = ['page','sort','limit','fields'];
  excludedFields.forEach(el=>delete queryObj[el]);
   

//   //advanced filtering

  let queryStr = JSON.stringify(queryObj);
    queryStr = queryStr.replace(/(gte|gt|lte|lt)\b/g, match=>`$${match}`);

   let query = Tour.find(JSON.parse(queryStr));
    //sorting
     if(req.query.sort){
         const sortBy = req.query.sort.split(',').join(' ');
        query = query.sort(sortBy);
     } else{
         query = query.sort('-createdAt');
     } 

    // limiting
    if(req.query.fields){
        const fields = req.query.fields.split(',').join(' ');
        query= query.select(fields);
     
    }else{
        query = query.select('-__v');
    }
    //   pagination
    //   if(req.query.page || req.query.limit){
    //     console.log('limit:',req.query.limit,'\npage:',req.query.page);
    //   }
      const page = req.query.page *1 || 1;
      const limit = req.query.limit *1 || 100;
      const skip = (page -1)*limit;
    //   console.log('skip:',skip,'\npage:',page);
      query = query.skip(skip).limit(limit);

      if(req.query.page){
          const numTours = await Tour.countDocuments();  
          if(skip >= numTours) throw new Error('this page does not exist');
      }
    //   execute query

    //   const features = new APIFeatures(tour.find(),req.query)
    //   .filter()
    //   .sort()
    //   .limitFields()
    //   .paginate();
  